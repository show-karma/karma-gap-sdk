{
    "abi": [
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint8",
                    "name": "version",
                    "type": "uint8"
                }
            ],
            "name": "Initialized",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "bytes32",
                            "name": "schema",
                            "type": "bytes32"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "value",
                                    "type": "uint256"
                                }
                            ],
                            "internalType": "struct AttestationRequestData",
                            "name": "data",
                            "type": "tuple"
                        }
                    ],
                    "internalType": "struct AttestationRequest",
                    "name": "request",
                    "type": "tuple"
                }
            ],
            "name": "attest",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "easAddr",
                    "type": "address"
                }
            ],
            "name": "initialize",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "bytes32",
                            "name": "schema",
                            "type": "bytes32"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "value",
                                    "type": "uint256"
                                }
                            ],
                            "internalType": "struct RevocationRequestData[]",
                            "name": "data",
                            "type": "tuple[]"
                        }
                    ],
                    "internalType": "struct MultiRevocationRequest[]",
                    "name": "multiRequests",
                    "type": "tuple[]"
                }
            ],
            "name": "multiRevoke",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "bytes32",
                            "name": "uid",
                            "type": "bytes32"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "components": [
                                        {
                                            "internalType": "address",
                                            "name": "recipient",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "uint64",
                                            "name": "expirationTime",
                                            "type": "uint64"
                                        },
                                        {
                                            "internalType": "bool",
                                            "name": "revocable",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "bytes32",
                                            "name": "refUID",
                                            "type": "bytes32"
                                        },
                                        {
                                            "internalType": "bytes",
                                            "name": "data",
                                            "type": "bytes"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "value",
                                            "type": "uint256"
                                        }
                                    ],
                                    "internalType": "struct AttestationRequestData[]",
                                    "name": "data",
                                    "type": "tuple[]"
                                }
                            ],
                            "internalType": "struct MultiAttestationRequest",
                            "name": "multiRequest",
                            "type": "tuple"
                        },
                        {
                            "internalType": "uint256",
                            "name": "refIdx",
                            "type": "uint256"
                        }
                    ],
                    "internalType": "struct Gap.AttestationRequestNode[]",
                    "name": "requestNodes",
                    "type": "tuple[]"
                }
            ],
            "name": "multiSequentialAttest",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "uid",
                    "type": "bytes32"
                }
            ],
            "name": "canAttestToRef",
            "outputs": [],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "eas",
            "outputs": [
                {
                    "internalType": "contract IEAS",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ]
}
